"use client";

import { cn } from "@/lib/utils";
import Image from "next/image";
import { TechStackOptions } from "./TechStack";
import SectionHeading from "./SectionHeading";
import { motion } from "framer-motion";

const teachers = [
  {
    title: "Fullstack Developer/Gi·∫£ng vi√™n",
    name: "Nguy·ªÖn ƒê·ª©c Huy",
    description:
      "H∆°n 4 nƒÉm kinh nghi·ªám trong lƒ©nh v·ª±c ph√°t tri·ªÉn website v√† gi·∫£ng d·∫°y bootcamp. ƒê∆∞·ª£c h·ªçc vi√™n y√™u m·∫øn b·ªüi c√°ch truy·ªÅn ƒë·∫°t ki·∫øn th·ª©c khoa h·ªçc v√† s·ª± h·ªó tr·ª£ t·∫≠n t√¢m. M·ª•c ti√™u l√† gi√∫p h·ªçc vi√™n trang b·ªã ƒë·∫ßy ƒë·ªß ki·∫øn th·ª©c v√† k·ªπ nƒÉng v·ªØng ch·∫Øc ƒë·ªÉ theo ƒëu·ªïi ng√†nh l·∫≠p tr√¨nh. üìç",
    avatar: "/img/teachers/huy.png",
    tech: [
      {
        title: "HTML",
        image: "/img/tech/html.svg",
      },
      {
        title: "CSS",
        image: "/img/tech/css.svg",
      },
      {
        title: "Javascript",
        image: "/img/tech/js.svg",
      },
      {
        title: "React",
        image: "/img/tech/react.svg",
      },
      {
        title: "NodeJS",
        image: "/img/tech/nodejs.svg",
      },
      {
        title: "Python",
        image: "/img/tech/python.svg",
      },
    ],
  },
  {
    title: "Java Developer/Gi·∫£ng vi√™n",
    name: "Nguy·ªÖn VƒÉn Minh",
    description:
      "Mong mu·ªën lan to·∫£ s·ª± th√∫ v·ªã c·ªßa l·∫≠p tr√¨nh v√† truy·ªÅn ƒë·ªông l·ª±c th·ª≠ th√°ch b·∫£n th√¢n ƒë·∫øn m·ªçi ng∆∞·ªùi. S·ª≠ d·ª•ng 4 nƒÉm kinh nghi·ªám l·∫≠p tr√¨nh Back-end Java gi√∫p h·ªçc vi√™n x√¢y d·ª±ng n·ªÅn t·∫£ng ki√™n c·ªë cho s·ª± ph√°t tri·ªÉn sau n√†y. üìç",
    avatar: "/img/teachers/minh.png",
    tech: [
      {
        title: "HTML",
        image: "/img/tech/html.svg",
      },
      {
        title: "CSS",
        image: "/img/tech/css.svg",
      },
      {
        title: "Javascript",
        image: "/img/tech/js.svg",
      },
      {
        title: "Java",
        image: "/img/tech/java.svg",
      },
      {
        title: "Docker",
        image: "/img/tech/docker.svg",
      },
      {
        title: "Spring Boot",
        image: "/img/tech/springboot.svg",
      },
    ],
  },
];

type TeacherInfo = {
  title: string;
  name: string;
  description: string;
  avatar: string;
  tech: TechStackOptions;
};

type TeacherPortfolioProps = {
  info: TeacherInfo;
  reverse?: boolean;
};

function TeacherPortfolio({ info, reverse = false }: TeacherPortfolioProps) {
  const { title, description, avatar, tech = [], name } = info;

  return (
    <div className="max-w-screen-lg px-8 mx-auto">
      <div
        className={cn(
          "flex flex-col-reverse lg:flex-col gap-4 lg:gap-16",
          reverse ? "lg:flex-row-reverse" : "lg:flex-row"
        )}
      >
        <motion.div
          initial={{ opacity: 0, x: reverse ? 50 : -50 }}
          whileInView={{ opacity: 1, x: 0 }}
          transition={{ delay: 0.5, duration: 0.5 }}
          viewport={{ once: true }}
          className="flex-1"
        >
          <div className="max-w-lg mx-auto lg:max-w-none">
            <div>
              <div className="text-center lg:text-left">
                <h3 className="mb-1 text-2xl font-bold ">{name}</h3>
                <p className="text-lg font-medium text-muted-foreground">
                  {title}
                </p>
              </div>

              <p className="mt-4 leading-7 text-muted-foreground">
                {description}
              </p>
            </div>

            <div className="flex flex-col gap-2 mt-2 sm:gap-4 sm:mt-6 sm:flex-row">
              <div className="pt-6 font-medium leading-7 whitespace-nowrap">
                Tech Stack <span className="hidden sm:inline">|</span>
              </div>
              <div className="flex flex-wrap items-center gap-4">
                {tech.map(({ title, image }) => (
                  <div
                    key={title}
                    className="flex items-center justify-center transition duration-500 rounded-full shadow-xl hover:shadow-2xl hover:-translate-y-1 h-[70px] w-[70px]"
                  >
                    <div className="relative w-[40px] h-[40px]">
                      <Image
                        src={image}
                        alt={title}
                        fill
                        className="object-contain object-center"
                      />
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </div>
        </motion.div>

        <div className="flex items-center justify-center flex-1">
          <motion.div
            initial={{ opacity: 0, x: reverse ? -50 : 50 }}
            whileInView={{ opacity: 1, x: 0 }}
            transition={{ delay: 0.5, duration: 0.5 }}
            viewport={{ once: true }}
            className="relative w-full max-w-[400px] aspect-[1/1]"
          >
            <Image src={avatar} fill alt={title} className="object-contain" />
          </motion.div>
        </div>
      </div>
    </div>
  );
}

export default function Teachers() {
  return (
    <section className="py-20 md:mb-16">
      <div className="container">
        <SectionHeading
          title="ƒê·ªôi ng≈© gi·∫£ng vi√™n"
          subtitle="Gi·∫£ng d·∫°y b·∫±ng s·ª± ƒëam m√™ c·ªëng hi·∫øn cho n·ªÅn gi√°o d·ª•c IT ·ªü Vi·ªát Nam, mong mu·ªën gi√∫p h·ªçc vi√™n chinh ph·ª•c l·∫≠p tr√¨nh th√†nh c√¥ng."
        />
      </div>

      <div className="flex flex-col gap-20 pt-10">
        {teachers.map((teacher, index) => (
          <TeacherPortfolio
            info={teacher}
            key={teacher.title}
            reverse={index % 2 !== 0}
          />
        ))}
      </div>
    </section>
  );
}
